A) De KochManager is nu alleen verantwoordelijk voor het aanpassen van de fractal. De KochFractal klasse zelf is nu alleen
verantwoordelijk voor het uitvoeren van de berekingen en de 'state' van de fractal bijhouden. De threads zijn nu alleen verantwordelijk
voor het initialiseren van de berekeningen.

B) In mijn kochmanager wacht ik voor de threads om een list van edges terug te geven doormiddel van Futures en met gebruik
van de threadpool. Dit is dus de 'listener' en de threads zijn nu dus eigenlijk de 'subjects' die de edges doorgeeft aan de manager.

C) Voor de task gebruik ik het type List<Edge> omdat ik deze later moet returnen in de call() methode.

D) Zodra de threads klaar zijn returnen zij de lists van edges die ik eerst opsla in een List<Future<List<Edge>>>. Vervolgens
weet ik dat het berekenen klaar is en vervolgens kan ik de resultaten krijgen met de .get()